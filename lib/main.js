// Generated by CoffeeScript 1.4.0
var Client, Player, World, app, express, io, path, players, server;

express = require('express');

app = express();

Client = require('./client.js');

Player = Client.Player;

path = require('path');

World = (function() {

  function World() {
    return;
  }

  return World;

})();

app.get('/', function(req, res) {
  return res.sendfile(path.resolve(__dirname + '/../public/index.html'));
});

app.configure(function() {
  app.use(express["static"](path.resolve(__dirname + '/../public')));
  app.use(express["static"](__dirname + '/'));
  return app.use(express.errorHandler({
    dumpExceptions: true,
    showStack: true
  }));
});

server = require('http').createServer(app);

io = require('socket.io').listen(server);

players = new Object;

server.listen(6543);

io.sockets.on('connection', function(socket) {
  var newPlayer;
  socket.emit('init', {
    players: JSON.stringify(players),
    id: socket.id
  });
  newPlayer = new Player((Math.random() * 500) + 1 | 0, (Math.random() * 500) + 1 | 0, socket.id, 'woodne', socket.id);
  io.sockets.emit('add', {
    player: newPlayer,
    id: socket.id
  });
  players[socket.id] = newPlayer;
  socket.on('disconnect', function() {
    delete players[socket.id];
    return io.sockets.emit('remove', {
      id: socket.id
    });
  });
  return socket.on('move', function(data) {
    var deltaX, deltaY;
    deltaX = deltaY = 0;
    switch (data.direction) {
      case 'left':
        players[data.id].x -= 5;
        deltaX = -5;
        break;
      case 'up':
        players[data.id].y -= 5;
        deltaY = -5;
        break;
      case 'down':
        players[data.id].y += 5;
        deltaY = 5;
        break;
      case 'right':
        players[data.id].x += 5;
        deltaX = 5;
    }
    return io.sockets.emit('update', {
      id: data.id,
      deltaY: deltaY,
      deltaX: deltaX
    });
  });
});
